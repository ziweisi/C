#include <stdio.h>
void pyramid(int n);
int main()
{    
    int n;
    scanf("%d", &n);
    pyramid(n);

    return 0;
}
void pyramid(int n){
	int i,j;
	for(i=1;i<=n;i++){
		for(j=1;j<=n-i;j++){
			printf(" ");
		}
		for(j=1;j<=i;j++){
		printf("%d ",i);}
		printf("\n");	
	}
} 
--------------------------
#include <stdio.h>
#include <math.h>
int prime( int p );
int PrimeSum( int m, int n );

int main()
{
    int m, n, p;
    scanf("%d %d", &m, &n);
    printf("Sum of ( ");
    for( p=m; p<=n; p++ ) {
        if( prime(p) != 0 )
            printf("%d ", p);
    }
    printf(") = %d\n", PrimeSum(m, n));

    return 0;
}
int prime( int p ){
	int flag=1;
	int i;
	if(p<=1){	flag=0;
	}
	else if(p==2){	flag=1;
	}
	else{
	for(i=2;i<=sqrt(p);i++){
	    if(p%i==0){
		flag=0;
		break;
		}
	} 
}
	return flag;
}
int PrimeSum( int m, int n ){
	int sum=0;
	int j;
	if (m>n) {
	printf("请保证前小后大"); 
	return 0;
	}
	else{
	for(j=m;j<=n;j++){
		if(prime(j)==1)
		sum+=j;
	}
	return sum; 
}
}

---------------------------
#include <stdio.h>
#include <math.h>
double funcos( double e, double x );
int main()
{   double e, x;
    scanf("%lf %lf", &e, &x);
    printf("cos(%.2f) = %.6f\n", x, funcos(e, x));
    return 0;
}
double funcos( double e, double x ){
int i=1;
int j,m;
int flag=-1;
double sum=1;
double powx=1;
double k=1;
double temp=1; 
while(abs(temp)>e){
 k=1;
 m=2*i;
 for(j=1;j<=m;j++)
 k=k*j;
powx=pow(x,m);
temp=powx/k;
sum=sum+flag*temp;
i++;
flag=-flag;
}
return sum;
}

-----------------------
double funcos( double e, double x ){
int i=1;
int j;
int flag=-1;
double sum=1;
double k=1;
double last_temp=1;
while(last_temp>=e){
     for(j=2*i-1;j<=2*i;j++)
         k=k*j;
    last_temp=pow(x,2*i)/k;
    sum=sum+flag*last_temp;
    flag=-flag;
    i++;
}
return sum;
}
	
	
	
	
	
	
	
