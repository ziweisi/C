#include <stdio.h>
#include <stdlib.h>

struct ListNode {
    int data;
    struct ListNode* next;
};

struct ListNode* readlist();
struct ListNode* deletem(struct ListNode* L, int m);
void printlist(struct ListNode* L)
{
    struct ListNode* p = L;
    while (p) {
        printf("%d ", p->data);
        p = p->next;
    }
    printf("\n");
}

int main()
{
    int m;
    struct ListNode* L = readlist();
    scanf("%d", &m);
    L = deletem(L, m);
    printlist(L);

    return 0;
}



struct ListNode* readlist() {
    int data = 0;
    struct ListNode* head=NULL,*p=NULL,*q=NULL;
    while (scanf("%d", &data) && data != -1) {
        q = (struct ListNode*)malloc(sizeof(struct ListNode));
        if (q != NULL) {
            q->data = data;
            q->next = NULL;
        }
        else printf("NO sucessed create NOde");
        
        if (head == NULL)
            head = q;
        else p->next = q;
        p = q;
    }
    return head;
}
    /*
    遍历整个链表，找到对应值后将链表结点删除.
    */
    struct ListNode* deletem(struct ListNode* L, int m)
    {

        struct ListNode* p = NULL, * temp = NULL;
        if (L == NULL)
        {
            return NULL;
        }
        p = L;
        temp = p->next;
        while (temp)
        {

            if (temp->data == m)
            {

                p->next = temp->next;
                free(temp);
                temp = p->next;
            }
            else
            {

                p = p->next;
                temp = p->next;
            }
        }
        if (L->data == m)
        {

            L = L->next;
        }
        return L;
    }
